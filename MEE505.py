# -*- coding: utf-8 -*-
"""
Created on Wed Jan 15 18:56:23 2020

@author: Odeniran Qozeem
"""

import matplotlib.pyplot as plt
import numpy as np
from numpy import log as ln

C1 = [0.1,0.5,1]
IE = [50,77.78,94.44]
titta = [0.5,0.78,0.94] #this values were obtained by dividing IE by 100
c_titta = [0.2,0.64,1.06] #this values were generated by dividing C1 by titta

plt.title('Inhibitor A')
plt.plot(C1,c_titta)
plt.xlabel('C1')
plt.ylabel('c_titta')
plt.show()

def getSlope(c_titta2,c_titta1,C1b,C1a):
    input('c_titta2: ')
    input('c_titta1: ')
    input('C1b: ')
    input('C1a: ')
    return (c_titta2 - c_titta1)/(C1b-C1a)
print('Slope is calculated by the formula : (c_titta2 - c_titta1)/(C1b - C1a)')
print('Slope : ',getSlope(0.64,0.2,0.5,0.1)) #the arguments are set as default values which can be altered by users!!!
#print(getSlope(c_titta2,c_titta1,C1b,C1a))

def getIntercept(c_titta2,c_titta1,C1b,C1a):
    m = getSlope(c_titta2,c_titta1,C1b,C1a)
    int(m)
    q  = c_titta1-m*C1a #where c_titta=y-coordinate @ any point, C1=x-coordinat @ any point and m=slope of the graph, q=intercept.
    return q
print('Intercept :',getIntercept(0.64,0.2,0.5,0.1))

def G_ads(R,T,k_ads):
    q = 0.0900
    K_ads = 1/q
    input('Enter the value for R: ')
    input('Enter the value for T: ')
    return -R*T*ln(999*K_ads)
print('G_ads :',G_ads(0.2,0.5,11.1111))
#this is the end of question (a)

